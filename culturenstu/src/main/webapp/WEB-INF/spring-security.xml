<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security
        https://www.springframework.org/schema/security/spring-security.xsd">
        
	<context:component-scan
		base-package="com.zero.culturebackend"/>
		
		
	<beans:bean id="passwordEencoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<!-- 
		<beans:constructor-arg name="strength"
			value="11" /> -->
	</beans:bean>

	<http pattern="/resources/**" security="none" />

	<http>
		<intercept-url pattern="/login" access="permitAll" />
		
		<intercept-url pattern="/admin/**" access="hasAuthority('Admin')" />
		<form-login login-page="/login" username-parameter="username" password-parameter="password"/>
		<logout/>
	</http>
	
		
	<authentication-manager>
		<authentication-provider>
		<password-encoder base64="true" hash="bcrypt" ref="passwordEencoder" />
		
		<jdbc-user-service data-source-ref="dataSource"
			users-by-username-query="select email, password, enabled from registered where email = ?"
			authorities-by-username-query="select email, role from registered where email = ?"
		/>
		
		</authentication-provider>
	</authentication-manager>


</beans:beans>